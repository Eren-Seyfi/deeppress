import { registerConfig } from "./registry.js";

// ğŸ“¦ Uygulama genel yapÄ±landÄ±rmalarÄ±nÄ±n tutulduÄŸu nesne
const config = {};

/**
 * âœ… Config deÄŸerlerini toplu olarak ayarlamak iÃ§in kullanÄ±lÄ±r
 * @param {object} values - Ayarlanacak config deÄŸerleri (key-value formatÄ±nda)
 */
function set(values) {
  if (typeof values !== "object" || values === null || Array.isArray(values)) {
    throw new Error("Config.set(values) â†’ values must be a plain object.");
  }

  Object.entries(values).forEach(([key, val]) => {
    config[key] = val;
  });

  // ğŸ§  DevTool & registry sistemine bildir
  registerConfig(getAll());
}

/**
 * âœ… Belirli bir config anahtarÄ±nÄ± dÃ¶ner
 * @param {string} key - Ä°stenen config anahtarÄ±
 * @returns {*} - DeÄŸer ya da undefined
 */
function get(key) {
  return config[key];
}

/**
 * ğŸ“‹ TÃ¼m config ayarlarÄ±nÄ± dÃ¶ner
 * @returns {object} - TÃ¼m config nesnesinin kopyasÄ±
 */
function getAll() {
  return { ...config };
}

export { set, get, getAll };
